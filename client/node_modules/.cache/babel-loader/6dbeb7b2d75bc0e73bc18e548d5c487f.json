{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\prash\\\\Desktop\\\\Audiobook-web\\\\client\\\\src\\\\components\\\\Authors.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { uuid } from \"uuidv4\";\nimport api from \"../api/authors\";\nimport \"./Authors.css\";\nimport Navbar from \"./Navbar\";\nimport Login from \"./Login\";\nimport AddAuthor from \"./Authors/AddAuthor\";\nimport Home from \"./Home\";\nimport AuthorList from \"./Authors/AuthorList\";\nimport AuthorDetail from \"./Authors/AuthorDetail\";\nimport EditAuthor from \"./Authors/EditAuthor\";\nimport AlbumDetail from \"./Albums/AlbumDetail\";\nimport AddAlbum from \"./Albums/AddAlbum\";\n\nfunction Authors() {\n  _s();\n\n  const [authors, setAuthors] = useState([]); //RetrieveAuthors\n\n  const retrieveAuthors = async () => {\n    const response = await api.get(\"/authors\");\n    return response.data;\n  };\n\n  const addAuthorHandler = async author => {\n    console.log(author);\n    const request = {\n      id: uuid(),\n      ...author\n    };\n    const response = await api.post(\"/authors\", request);\n    console.log(response);\n    setAuthors([...authors, response.data]);\n  };\n\n  const updateAuthorHandler = async author => {\n    const response = await api.put(`/authors/${author.id}`, author);\n    const {\n      id,\n      name,\n      email,\n      albums,\n      audios\n    } = response.data;\n    setAuthors(authors.map(author => {\n      return author.id === id ? { ...response.data\n      } : author;\n    }));\n  };\n\n  const removeAuthorHandler = async id => {\n    await api.delete(`/authors/${id}`);\n    const newAuthorList = authors.filter(author => {\n      return author.id !== id;\n    });\n    setAuthors(newAuthorList);\n  };\n\n  useEffect(() => {\n    const getAllAuthors = async () => {\n      const allAuthors = await retrieveAuthors();\n      if (allAuthors) setAuthors(allAuthors);\n    };\n\n    getAllAuthors();\n  }, []);\n  useEffect(() => {}, [authors]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui container\",\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            component: Home\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/login\",\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/Authors\",\n            exact: true,\n            render: props => /*#__PURE__*/_jsxDEV(AuthorList, { ...props,\n              authors: authors,\n              getAuthorId: removeAuthorHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add\",\n            render: props => /*#__PURE__*/_jsxDEV(AddAuthor, { ...props,\n              addAuthorHandler: addAuthorHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit\",\n            render: props => /*#__PURE__*/_jsxDEV(EditAuthor, { ...props,\n              updateAuthorHandler: updateAuthorHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/author/:id\",\n            component: AuthorDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/addAlbum\",\n            render: props => /*#__PURE__*/_jsxDEV(AddAlbum, { ...props,\n              addAuthorHandler: addAuthorHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Authors, \"zOKnvKlsEvzeIRNP7K+Z7LSlwc4=\");\n\n_c = Authors;\nexport default Authors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authors\");","map":{"version":3,"sources":["C:/Users/prash/Desktop/Audiobook-web/client/src/components/Authors.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","uuid","api","Navbar","Login","AddAuthor","Home","AuthorList","AuthorDetail","EditAuthor","AlbumDetail","AddAlbum","Authors","authors","setAuthors","retrieveAuthors","response","get","data","addAuthorHandler","author","console","log","request","id","post","updateAuthorHandler","put","name","email","albums","audios","map","removeAuthorHandler","delete","newAuthorList","filter","getAllAuthors","allAuthors","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { uuid } from \"uuidv4\";\nimport api from \"../api/authors\";\n\nimport \"./Authors.css\";\nimport Navbar from \"./Navbar\";\nimport Login from \"./Login\";\nimport AddAuthor from \"./Authors/AddAuthor\";\nimport Home from \"./Home\";\nimport AuthorList from \"./Authors/AuthorList\";\nimport AuthorDetail from \"./Authors/AuthorDetail\";\nimport EditAuthor from \"./Authors/EditAuthor\";\n\nimport AlbumDetail from \"./Albums/AlbumDetail\"\nimport AddAlbum from \"./Albums/AddAlbum\"\n\nfunction Authors() {\n  const [authors, setAuthors] = useState([]);\n\n  //RetrieveAuthors\n  const retrieveAuthors = async () => {\n    const response = await api.get(\"/authors\");\n    return response.data;\n  };\n\n  const addAuthorHandler = async (author) => {\n    console.log(author);\n    const request = {\n      id: uuid(),\n      ...author,\n    };\n\n    const response = await api.post(\"/authors\", request);\n    console.log(response);\n    setAuthors([...authors, response.data]);\n  };\n\n  const updateAuthorHandler = async (author) => {\n    const response = await api.put(`/authors/${author.id}`, author);\n    const { id, name, email, albums, audios } = response.data;\n    setAuthors(\n      authors.map((author) => {\n        return author.id === id ? { ...response.data } : author;\n      })\n    );\n  };\n\n  const removeAuthorHandler = async (id) => {\n    await api.delete(`/authors/${id}`);\n    const newAuthorList = authors.filter((author) => {\n      return author.id !== id;\n    });\n\n    setAuthors(newAuthorList);\n  };\n\n  useEffect(() => {\n    const getAllAuthors = async () => {\n      const allAuthors = await retrieveAuthors();\n      if (allAuthors) setAuthors(allAuthors);\n    };\n\n    getAllAuthors();\n  }, []);\n\n  useEffect(() => {\n\n  }, [authors]);\n\n  return (\n    <div>\n      <Router>\n        <Navbar />  \n        <div className=\"ui container\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/login\" component={Login} />\n          \n          <Route\n            path=\"/Authors\"\n            exact\n            render={(props) => (\n              <AuthorList\n                {...props}\n                authors={authors}\n                getAuthorId={removeAuthorHandler}\n              />\n            )}\n          />\n          <Route\n            path=\"/add\"\n            render={(props) => (\n              <AddAuthor {...props} addAuthorHandler={addAuthorHandler} />\n            )}\n          />\n\n          <Route\n            path=\"/edit\"\n            render={(props) => (\n              <EditAuthor\n                {...props}\n                updateAuthorHandler={updateAuthorHandler}\n              />\n            )}\n          />\n\n          <Route path=\"/author/:id\" component={AuthorDetail} />\n          \n\n         \n\n\n          {/* for albums */}\n          \n          <Route\n            path=\"/addAlbum\"\n            render={(props) => (\n              <AddAlbum {...props} addAuthorHandler={addAuthorHandler} />\n            )}\n          />\n          \n\n\n        </Switch>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default Authors;\n"]},"metadata":{},"sourceType":"module"}